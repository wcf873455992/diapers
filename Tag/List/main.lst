C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Object\main.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(4,SPEED) BROWSE INCDIR(hal\nrf24le1;hal\nrf24l01p;h
                    -al;compiler\c51;compiler\common) DEFINE(MCU_NRF24LE1) DEBUG OBJECTEXTEND PRINT(.\List\main.lst) OBJECT(.\Object\main.obj
                    -)

line level    source

   1          /****************************************Copyright (c)****************************************************
   2          **
   3          **                                 合肥艾克姆电子科技有限公司
   4          **                                  论坛：http://930ebbs.com
   5          **--------------File Info---------------------------------------------------------------------------------
   6          ** File name:                   main.c
   7          ** Last modified Date: 2017-3-1
   8          ** Last Version:                   1.3
   9          ** Descriptions:
  10          **
  11          **--------------------------------------------------------------------------------------------------------
  12          ** Created by:                  FiYu
  13          ** Created date:                2014-11-12
  14          ** Version:                         1.0
  15          ** Descriptions:                有源RFID实验程序-TAG
  16          **                                                    发送数据格式
  17          **                  长度：6个字节
  18          **                  ID长度：2字节
  19          字节:    1     2   3    4  5   6
  20          意义:   命令  IDH IDL  VH  VL  校验
  21          
  22          **--------------------------------------------------------------------------------------------------------
  23          ** Modified by:
  24          ** Modified date:
  25          ** Version:
  26          ** Descriptions:
  27          **
  28          ** Rechecked by:
  29          **********************************************************************************************************
             -/
  30          #include <reg24le1.h>
  31          #include <stdint.h>
  32          #include <stdbool.h>
  33          #include "config.h"
  34          #include "hal_nrf.h"
  35          #include "hal_nrf_hw.h"
  36          #include "hal_clk.h"
  37          #include "hal_rtc.h"
  38          #include "hal_delay.h"
  39          #include "hal_adc.h"
  40          #include "hal_wdog.h"
  41          #include "hal_uart.h"
  42          
  43          #include <stdio.h>
  44          #include <string.h>
  45          
  46          #include "user/AHT10.h"
  47          #include "user/DHT11.h"
  48          #include "user/led.h"
  49          #include "user/key.h"
  50          
  51          /*-------------------管脚定义--------------------------------------------------*/
  52          #define  D1    P00  // 开发板上的指示灯D1
C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 2   

  53          #define  D2    P01  // 开发板上的指示灯D2
  54          #define  S2    P12  // 开发板上的按键S2
  55          #define  S3    P13  // 开发板上的按键S3
  56          #define  ADC   P06
  57          
  58          
  59          
  60          /*******************************************************************************************************
  61           * 变量定义
  62           *******************************************************************************************************/
  63          xdata bool  radio_busy;
  64          xdata uint8_t  TxPayload[32];
  65          xdata uint8_t  RxPayload[32];
  66          uint16_t PipeAndLen;
  67          uint8_t  TX_ADDRESS[5]  = {0xE7, 0xE7, 0xE7, 0xE7, 0xE7}; // TX address
  68          
  69          xdata TagInformation TagInfo;
  70          
  71          
  72          /*******************************************************************************************************
  73           * 描  述 : 初始化IO
  74           * 入  参 : 无
  75           * 返回值 : 无
  76           *******************************************************************************************************/
  77          void IoInit(void)
  78          {
  79   1          P0DIR = 0x00;
  80   1          P1DIR = 0x00;
  81   1      }
  82          #ifdef DEBUG_UART
  83          /*******************************************************************************************************
  84           * 描  述 : 串口输出字符
  85           * 入  参 : 无
  86           * 返回值 : 无
  87           *******************************************************************************************************/
  88          void uart_sendchar(uint8_t dat)
  89          {
  90   1          S0BUF = dat;
  91   1          while(!TI0);
  92   1          TI0 = 0;
  93   1      }
  94          #endif
  95          /*******************************************************************************************************
  96           * 描  述 : 串口输出字符串
  97           * 入  参 : 无
  98           * 返回值 : 无
  99           *******************************************************************************************************/
 100          void PutString(char *s)
 101          {
 102   1              #ifdef DEBUG_UART
 103   1          while(*s != 0)
 104   1              uart_sendchar(*s++);
 105   1          //delay_ms(1);
 106   1                      #endif
 107   1      }
 108          /*********************************************************************************************************
 109          ** 描  述:  adc初始化
 110          ** 入  参:  NONE
 111          ** 返回值:  NONE
 112          *********************************************************************************************************/
 113          void adc_init(void)
 114          {
C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 3   

 115   1          hal_adc_set_input_channel(HAL_INP_VDD1_3);          //设置通道 检测1/3 VDD电压
 116   1          hal_adc_set_reference(HAL_ADC_REF_INT);             //设置参考电压 内部1.22V
 117   1          hal_adc_set_input_mode(HAL_ADC_SINGLE);             //单端输入
 118   1          hal_adc_set_conversion_mode(HAL_ADC_SINGLE_STEP);   //单次采样模式
 119   1          hal_adc_set_sampling_rate(HAL_ADC_2KSPS);           //采样速率为    2ksps
 120   1          hal_adc_set_resolution(HAL_ADC_RES_12BIT);          //12位ADC
 121   1          hal_adc_set_data_just(HAL_ADC_JUST_RIGHT);          //数据右对齐
 122   1      }
 123          
 124          /*******************************************************************************************************
 125           * 描  述 : 设置休眠时间
 126           * 入  参 : period:休眠时间
 127           * 返回值 : 无
 128           *******************************************************************************************************/
 129          void set_timer_period(uint16_t period)
 130          {
 131   1          if((period < 10) && (period > 65536))period = 32768;
 132   1      
 133   1          hal_rtc_start(false);
 134   1          hal_rtc_start(true);
 135   1          hal_rtc_set_compare_value(period - 1);
 136   1      }
 137          
 138          /*******************************************************************************************************
 139           * 描  述 : 配置无线参数
 140           * 入  参 : 无
 141           * 返回值 : 无
 142           *******************************************************************************************************/
 143          void RfCofig(void)
 144          {
 145   1          RFCKEN = 1;      //使能RF时钟
 146   1      
 147   1          hal_nrf_close_pipe(HAL_NRF_ALL);           //先关闭所有的通道.
 148   1          hal_nrf_open_pipe(HAL_NRF_PIPE0, false);      //再打开通道0.
 149   1      
 150   1          hal_nrf_set_operation_mode(HAL_NRF_PTX);    // 模式：发送
 151   1          hal_nrf_set_rf_channel(TAG_CH);                       // RF信道：50。接收和发送必须处于同一信道
 152   1          hal_nrf_set_datarate(HAL_NRF_250KBPS);          // RF速率：250KBPS
 153   1          hal_nrf_set_output_power(HAL_NRF_0DBM);         // 功率：0DBM
 154   1          hal_nrf_set_crc_mode(HAL_NRF_CRC_16BIT);    //设置CRC校验：16位CRC。必须和接收设备一致。
 155   1          hal_nrf_set_address(HAL_NRF_TX, TX_ADDRESS); //设置发射机地址
 156   1          hal_nrf_set_auto_retr(0, 1500);                                //自动重发:0
 157   1      
 158   1          hal_nrf_set_power_mode(HAL_NRF_PWR_UP);             //发射机上电
 159   1          RF = 1;       //使能无线中断
 160   1          EA = 1;          // 使能全局中断
 161   1      }
 162          
 163          /*******************************************************************************************************
 164           * 描  述 : 时钟和RTC唤醒配置
 165           * 入  参 : 无
 166           * 返回值 : 无
 167           *******************************************************************************************************/
 168          void mcu_init(void)
 169          {
 170   1          hal_rtc_start(false);
 171   1          hal_clklf_set_source(HAL_CLKLF_RCOSC32K);           // Use 32.768KHz的时钟源为内部RC
 172   1      
 173   1          hal_rtc_set_compare_mode(HAL_RTC_COMPARE_MODE_0);   // Use 32 KHz timer mode 0
 174   1          set_timer_period(TAG_TIME);                         // Set the RTC2 time，card sleep time
 175   1          hal_clk_set_16m_source(HAL_CLK_XOSC16M);            // Always run on 16MHz crystal oscillator
 176   1          hal_clk_regret_xosc16m_on(0);                       // Keep XOSC16M off in register retention
C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 4   

 177   1      
 178   1          hal_rtc_start(true);
 179   1      
 180   1          while((CLKLFCTRL & 0x80) == 0x80);                  // Wait for the 32kHz to startup (change phase)
 181   1          while((CLKLFCTRL & 0x80) != 0x80);
 182   1      }
 183          
 184          /*******************************************************************************************************
 185           * 描  述 : 组装数据
 186           * 入  参 : 无
 187           * 返回值 : 无
 188           *******************************************************************************************************/
 189          void Assemble_Data(void)
 190          {
 191   1          xdata uint8_t fcs = 0, i;
 192   1      
 193   1      
 194   1          TxPayload[0] = 0x1E;
 195   1          TxPayload[1] = TagInfo.id.id8[0];  //IDL
 196   1          TxPayload[2] = TagInfo.id.id8[1];  //IDH
 197   1          TxPayload[3] = TagInfo.CellVoltageH;
 198   1          TxPayload[4] = TagInfo.CellVoltageL;
 199   1          TxPayload[5] = TagInfo.tempH;
 200   1          TxPayload[6] = TagInfo.tempL;
 201   1          TxPayload[7] = TagInfo.humyH;
 202   1          TxPayload[8] = TagInfo.humyL;
 203   1              
 204   1          for(i = 0; i < (MAX_TX_PAYLOAD - 1); i++)fcs += TxPayload[i];
 205   1      
 206   1          TxPayload[MAX_TX_PAYLOAD - 1] = (256 - fcs) % 256;
 207   1      }
 208          void CellVoltage(){
 209   1              uint32_t        ad_value = 0,temp=0;
 210   1              hal_adc_start();           //启动ADC
 211   1              while( hal_adc_busy())     //等待ADC转换结束
 212   1              ;       
 213   1              TagInfo.CellVoltageH = hal_adc_read_MSB(); //读取ADC采样值
 214   1              TagInfo.CellVoltageL = hal_adc_read_LSB();
 215   1              ad_value = (ad_value|hal_adc_read_MSB())<<8;
 216   1              ad_value = ad_value|hal_adc_read_LSB();
 217   1              temp = ad_value*1.2*3*100/4096; //电压扩大100倍
 218   1              TagInfo.CellVoltageH = temp/100;//
 219   1              TagInfo.CellVoltageL = ((temp%100/10)<<4)|(temp%100%10);
 220   1      }
 221          
 222          void AHT10(void)
 223          {
 224   1          uint8_t temp[5];
 225   1          uint8_t humidity[5];
 226   1      
 227   1          memset(temp, 0, 5);
 228   1          memset(humidity, 0, 5);
 229   1          temp[2] = '.';
 230   1          humidity[2] = '.';
 231   1      
 232   1          //while(1)
 233   1          {
 234   2      
 235   2              //DisableIrq(); //由于是模拟I2C,为读取数据更准确 ，读取之前禁止中断
 236   2              Read_AHT10();  //读取温度和湿度 ， 可间隔1.5S读一次
 237   2              //EnableIrq(); //恢复中断
 238   2      
C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 5   

 239   2                                      TagInfo.tempH = AHT10Value.tempH ;
 240   2              TagInfo.tempL = AHT10Value.tempL ;
 241   2              TagInfo.humyH = AHT10Value.humyH ;
 242   2              TagInfo.humyL = AHT10Value.humyL ;
 243   2                                      
 244   2              temp[0] = (AHT10Value.tempH>>4) + 0x30;
 245   2              temp[1] = (AHT10Value.tempH&0x0f) + 0x30;
 246   2              temp[3] = (AHT10Value.tempL>>4) + 0x30;
 247   2              humidity[0] = (TagInfo.humyH>>4) + 0x30;
 248   2              humidity[1] = (TagInfo.humyH&0x0f) + 0x30;
 249   2              humidity[3] = (TagInfo.humyL>>4) + 0x30;
 250   2                                               
 251   2                              PutString("AHT10-温度:");
 252   2                       PutString(temp);
 253   2                       PutString("    ");
 254   2                       PutString("湿度:");
 255   2                       PutString(humidity);
 256   2                       PutString("\r\n");
 257   2             /**/             
 258   2              //delay_ms(1500); //延时1.5S
 259   2              //为读取的数据更稳定，还可以使用平均值滤波或者窗口滤波，或者前面读取的值与后面的值相差不能太大。
 260   2          }
 261   1      }
 262          void    Send_data(){
 263   1                      Assemble_Data();  // 数据打包
 264   1                      hal_nrf_write_tx_payload(TxPayload, MAX_TX_PAYLOAD);
 265   1      
 266   1                      CE_PULSE();                 //无线发射数据
 267   1                      radio_busy = true;
 268   1                      while(radio_busy)                   //等待操作完成
 269   1                      ;
 270   1      }
 271          /*******************************************************************************************************
 272           * 描  述 : 主函数
 273           * 入  参 : 无
 274           * 返回值 : 无
 275           *******************************************************************************************************/
 276          void main()
 277          {
 278   1          uint8_t RfReceLen, i, second = 0;
 279   1          xdata   uint32_t  loopCount = ADC_TIME - 1;
 280   1          uint32_t    minute = 0;
 281   1      
 282   1          TagInfo.id.id16 = TAG_ID;
 283   1          IoInit();
 284   1              led_init();
 285   1              key_init();
*** WARNING C206 IN LINE 285 OF main.c: 'key_init': missing function-prototype
 286   1          mcu_init();
 287   1          adc_init();
 288   1              AHT10_Init();           
 289   1          RfCofig();
 290   1              
 291   1      #ifdef DEBUG_UART
 292   1          hal_uart_init(UART_BAUD_57K6);  //初始化UART，波特率57600
 293   1          while(hal_clk_get_16m_source() != HAL_CLK_XOSC16M) //等待时钟稳定
 294   1              ;
 295   1      #endif
 296   1          //EA = 1;             //使能全局中断
 297   1              
 298   1      #ifdef  USE_WDT
 299   1          hal_wdog_init(WDT_TIME);//配置看门狗超时时间2s，使能看门狗
C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 6   

 300   1      #endif
 301   1          PutString("reset\r\n");    
 302   1              led_flash(led2);
 303   1                      
 304   1              CellVoltage();  
 305   1              AHT10();
 306   1              Send_data();
 307   1                      
 308   1          while(1)
 309   1          {
 310   2      #ifdef  USE_WDT
 311   2                      hal_wdog_restart(); //喂狗
 312   2      #endif
 313   2              second++;
 314   2              if(second <= MINUTE) //未到1分钟
 315   2              {
 316   3      #ifdef  DEBUG_LED
 317   3                              //led_flash(led1);
 318   3      #endif
 319   3                  PWRDWN = 0x04;    // 进入寄存器维持低功耗模式
 320   3                  PWRDWN = 0x00;
 321   3              }
 322   2              else
 323   2              {
 324   3                  second = 0;
 325   3                  minute++;                                   
 326   3      #ifdef  DEBUG_LED
 327   3                              led_flash(led1);
 328   3      #endif
 329   3                              AHT10();
 330   3                  if(minute == 3 * HOUR)  //每3小时检测一次
 331   3                  {
 332   4                                      CellVoltage();
 333   4                                      minute = 0;
 334   4                  }
 335   3                              Send_data();
 336   3              }
 337   2          }
 338   1      }
*** WARNING C280 IN LINE 278 OF main.c: 'RfReceLen': unreferenced local variable
*** WARNING C280 IN LINE 278 OF main.c: 'i': unreferenced local variable
 339          
 340          /*******************************************************************************************************
 341           * 描  述 : 无线中断服务函数
 342           * 入  参 : 无
 343           * 返回值 : 无
 344           *******************************************************************************************************/
 345          void rf_irq() interrupt INTERRUPT_RFIRQ
 346          {
 347   1          uint8_t  irq_flags;
 348   1      
 349   1          irq_flags = hal_nrf_get_clear_irq_flags(); //读取并清除无线中断标志
 350   1      
 351   1          if(irq_flags & (1 << HAL_NRF_RX_DR)) //接收到数据?
 352   1          {
 353   2      
 354   2              while(!hal_nrf_rx_fifo_empty())// Read payload
 355   2              {
 356   3                  PipeAndLen = hal_nrf_read_rx_payload(RxPayload);//读取数据
 357   3              }
 358   2              radio_busy = false;
 359   2          }
C51 COMPILER V9.52.0.0   MAIN                                                              08/09/2019 19:07:32 PAGE 7   

 360   1      
 361   1          if(irq_flags & ((1 << HAL_NRF_TX_DS)))                      // transimmter finish
 362   1          {
 363   2              radio_busy = false;
 364   2          }
 365   1      
 366   1          if(irq_flags & ((1 << HAL_NRF_MAX_RT)))                     // re-transimmter
 367   1          {
 368   2              radio_busy = false;
 369   2              hal_nrf_flush_tx();
 370   2          }
 371   1      }
 372          /********************************************END FILE*****************************************************
             -/
 373          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1291    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =     73       6
   PDATA SIZE       =      7      32
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
